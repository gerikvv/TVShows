<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" >

<!--<SnippetMergedDictionaries>-->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Shared.xaml" />
  </ResourceDictionary.MergedDictionaries>
<!--</SnippetMergedDictionaries>-->

  <!-- Focus Visual -->

<!--<SnippetButtonFocusVisual>-->
  <Style x:Key="ButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle 
              Margin="2"
              StrokeThickness="0"
              Stroke="#00000000"
              StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
<!--</SnippetButtonFocusVisual>-->

  <!-- SimpleStyles: Button -->

  <!--<Snippet1>-->
  <Style TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    <Setter Property="MinHeight" Value="23"/>
    <Setter Property="MinWidth" Value="75"/>
      
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border 
            x:Name="Border"  
            CornerRadius="0" 
            BorderThickness="1"
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDefaulted" Value="true">
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
            </Trigger>
            <!--<SnippetIsEnabledTrigger>-->
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{StaticResource ForegroundColorLigth}"/>
            </Trigger>
            <!--</SnippetIsEnabledTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--</Snippet1>-->

    <Style x:Key="SimpleButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="Background" Value="{StaticResource TransparentBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OrangeColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundColorLigth}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="-3,1,1,1"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Grid">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource OrangeBorder}" Padding="{TemplateBinding Padding}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource TransparentBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{StaticResource OrangeColorBrush}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColorOrange}"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColorLigth}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DBButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SimpleButton}">
        <Setter Property="Padding" Value="1,1,1,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Grid">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource DoubleOrangeBorder}" Padding="{TemplateBinding Padding}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource TransparentBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{StaticResource OrangeColorBrush}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColorOrange}"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColorOrange}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SimpleButton}">
        <Setter Property="Padding" Value="1,1,1,1"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="MinHeight" Value="15"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0,1,0,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Grid">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                         Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource TransparentBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColorOrange}"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColorOrange}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource LightColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArrowRigthButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Path x:Name="Arrow" Fill="{StaticResource LightColorBrush}" VerticalAlignment="Center" Data="M0,0L20,15 0,30 0,15z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ForegroundColorOrange}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArrowLeftButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ArrowRigthButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Path x:Name="Arrow" Fill="{StaticResource LightColorBrush}" VerticalAlignment="Center" Data="M20,0L20,15 20,30 0,15z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ForegroundColorOrange}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="ButtonStar" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    	<Setter Property="Template">
        	<Setter.Value>
        		<ControlTemplate TargetType="{x:Type Button}">

                    <ed:RegularPolygon x:Name="Star" Cursor="Hand" InnerRadius="0.5" PointCount="5" RenderTransformOrigin="1.901,0.537" Stretch="Fill" Stroke="#FFE2970E" Focusable="False">
                        <ed:RegularPolygon.Fill>
                            <RadialGradientBrush x:Name="Gradient">
                                <GradientStop x:Name="gradient1" Color="#FFDCE715" Offset="0.209"/>
                                <GradientStop x:Name="gradient2" Color="#FFEFB171" Offset="1"/>
                            </RadialGradientBrush>
                        </ed:RegularPolygon.Fill>
                    </ed:RegularPolygon>

                    <ControlTemplate.Triggers>                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="Star" Value="#FFEF6321"/>
                            <Setter Property="Fill" TargetName="Star">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFE7B915" Offset="0.209"/>
                                        <GradientStop Color="#FFF19569" Offset="0.991"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
	        				<Setter Property="Stroke" TargetName="Star" Value="#FFEF6321"/>
	        				<Setter Property="Fill" TargetName="Star">
	        					<Setter.Value>
	        						<RadialGradientBrush>
	        							<GradientStop Color="#FFE7B915" Offset="0.209"/>
	        							<GradientStop Color="#FFF19569" Offset="0.991"/>
	        						</RadialGradientBrush>
	        					</Setter.Value>
	        				</Setter>   			
						</Trigger>
	        		</ControlTemplate.Triggers>
        		</ControlTemplate>
        	</Setter.Value>
        </Setter>
     </Style>

</ResourceDictionary>